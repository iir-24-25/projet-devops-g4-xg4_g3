name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Build Spring Boot backend
        working-directory: docnow-backend
        run: mvn clean package

  build-jee:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Build JEE application
        working-directory: docnow-jee
        run: mvn clean package

  build-frontend:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Set up Node.js ≥18
          uses: actions/setup-node@v3
          with:
            node-version: 18
        - name: Install & build frontend
          working-directory: docnow-frontend
          run: |
              npm install
              npm run build

  deploy-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js ≥18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Build frontend
        working-directory: docnow-frontend
        run: |
          npm install
          npm run build
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docnow-frontend/dist

  deploy-backend:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy Backend (JAR) via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /opt/docnow-backend
            scp -o StrictHostKeyChecking=no ${{ github.workspace }}/docnow-backend/target/*.jar ./
            systemctl restart docnow-backend.service

  deploy-jee:
    needs: build-jee
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy JEE (WAR) via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /opt/tomcat/webapps
            scp -o StrictHostKeyChecking=no ${{ github.workspace }}/docnow-jee/target/*.war ./
            systemctl restart tomcat
